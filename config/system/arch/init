#!/usr/bin/env bash
set -euo pipefail

# ===== UI =====
BOLD="\033[1m"; RESET="\033[0m"
RED="\033[31m"; GREEN="\033[32m"; YELLOW="\033[33m"; CYAN="\033[36m"
info()  { printf "%b %s\n" "${BOLD}${CYAN}INFO\t:\t${RESET}"  "$*"; }
ok()    { printf "%b %s\n" "${BOLD}${GREEN}OK\t:\t${RESET}"   "$*"; }
warn()  { printf "%b %s\n" "${BOLD}${YELLOW}WARN\t:\t${RESET}" "$*"; }
error() { printf "%b %s\n" "${BOLD}${RED}ERROR\t:\t${RESET}"  "$*"; }
rule()  { printf "%s\n" "---------------------------------------------------------------------"; }
die()   { error "$*"; exit 1; }
run() {
  local msg="$1"; shift
  info "$msg"
  if ! "$@" > /dev/null 2>&1; then
    error "Failed: $msg"
    return 1
  fi
  ok "$msg"
}

dir=$1

# ===== Checking privileges =====
if [ "${EUID:-$(id -u)}" -eq 0 ]; then
  error "Do not run this script as root. Use a regular user with sudo."
  exit 1
else
  info "Running as regular user. sudo may prompt for password."
fi

# ===== PACMAN =====

packages=(
  xorg-server
  xorg-xinit
  xorg-xrandr
  xorg-xsetroot
  xorg-xprop
  mesa
  mesa-demos
  bspwm
  sxhkd
  polybar
  rofi
  jq
  kitty
  xclip
  vim
  lightdm
  lightdm-gtk-greeter
  feh
  open-vm-tools
)

run "Refreshing databases and upgrading system" sudo pacman -Syu --noconfirm
run "Installing prerequisites" sudo pacman -S --noconfirm --needed "${packages[@]}"

# Remove orphans if any
if orphans=$(pacman -Qdtq 2>/dev/null) && [ -n "${orphans:-}" ]; then
  run "Removing orphaned packages" sudo pacman -Rns --noconfirm $orphans
else
  info "No orphaned packages to remove"
fi

# ===== PRE =====
[ -n "${dir:-}" ] || die "Usa: $0 /ruta/al/repo"
[ -d "$dir/shared" ] || die "No existe $dir/shared"
HOME_DIR="$HOME"

# ===== BSPWM =====
install -d -m 755 "$HOME_DIR/.config/bspwm" "$HOME_DIR/.config/sxhkd"
cp -a "$dir/shared/bspwm/." "$HOME_DIR/.config/bspwm/"
cp -a "$dir/shared/sxhkd/." "$HOME_DIR/.config/sxhkd/"
chmod u+x "$HOME_DIR/.config/bspwm/bspwmrc"

# ===== POLYBAR =====
install -d -m 755 "$HOME_DIR/.config/polybar"
cp -a "$dir/shared/polybar/." "$HOME_DIR/.config/polybar/"
chmod u+x "$HOME_DIR/.config/polybar/launch.sh"
chmod u+x "$HOME_DIR/.config/polybar/modules/"* 2>/dev/null || true

# ===== XINITRC =====
# Si vas a usar LightDM, NO necesitas .xinitrc.
if [ ! -f "$HOME_DIR/.xinitrc" ]; then
  printf '%s\n' 'exec bspwm' > "$HOME_DIR/.xinitrc"
  chmod u+x "$HOME_DIR/.xinitrc"
fi

# ===== PROPIETARIO HOME =====
chown -R "$USER:$USER" "$HOME_DIR/.config"

# ===== LIGHTDM =====
sudo install -D -m 644 \
  "$dir/shared/utils/lightdm-gtk-greeter.conf" \
  /etc/lightdm/lightdm-gtk-greeter.conf

sudo install -D -m 644 \
  "$dir/shared/img/wallpaper.jpg" \
  /usr/share/backgrounds/wallpaper.jpg

sudo systemctl enable lightdm.service || true
sudo systemctl start lightdm.service || true

# ===== VM TOOLS (VMware) =====
sudo systemctl enable --now vmtoolsd.service || true
sudo systemctl enable --now vmware-vmblock-fuse.service || true
